@model CommunityConnections.ViewModels.AdsListingViewModel
@{
    ViewBag.Title = "Index";
    WebGrid grid = new WebGrid(Model.Ads, rowsPerPage:20);
}
<div class="card">
    <div class="card-body">
        <h2>Ads</h2>
        <p>For File Edit Copy File Name with Extension and add before >> Content/paths/</p>
        <hr />


        <div class="row mb-3">
            
            <div class="col col-lg-12">
                <form>
                    <div class="input-group">
                        <input type="text" name="searchterm" class="form-control" placeholder="Search." value="@Model.SearchTerm">
                        @Html.ValidationSummary("", new { @class = "text-danger" })



                        <div class="input-group-append">
                            <button class="btn btn-outline-primary" type="submit"><i class="mdi mdi-account-search"></i> Search</button>
                            <a class="btn btn-outline-success" href="@Url.Action("Action","Ads")"><i class="mdi mdi-account-plus"></i>Add New</a>
                            <a class="btn btn-outline-success" href="@Url.Action("Import","Ads")"><i class="mdi mdi-account-plus"></i>Import</a>

                        </div>
                    </div>

                </form>
            </div>
        </div>
        <div id="actionContainer">
            <div class="row">
                <div class="col col-lg-12">
                    @*@{
            Html.RenderPartial("_Listing", Model);
        }*@


                    @grid.GetHtml(
                            tableStyle: "table table-responsive table-striped table-bordered",
                            columns: grid.Columns(

grid.Column(header: "ID", format:@<text><div class="edit" data-id="@item.ID" data-propertyname="ID">@item.ID</div></text>),
grid.Column(header: "Name", format:@<text><div class="edit" data-id="@item.ID" data-propertyname="Name">@item.Name</div></text>),
grid.Column(header: "Ad Size", format:@<text><div class="editSelect" data-id="@item.ID" data-propertyname="AdSize">@item.AdSize</div></text>),
grid.Column(header: "Path", format:@<text><div class="edit" data-id="@item.ID" data-propertyname="Path">@item.Path</div></text>),
grid.Column(header: "PageNo", format:@<text><div class="edit" data-id="@item.ID" data-propertyname="PageNo">@item.PageNo</div></text>),
grid.Column(header: "Layout", format:@<text><div class="edit" data-id="@item.ID" data-propertyname="Layout">@item.Layout</div></text>),
grid.Column(header: "Book", format:@<text><div class="edit" data-id="@item.ID" data-propertyname="Book">@item.Book</div></text>),
grid.Column(header: "Customer", format:@<text><div class="editCustomerSelect" data-id="@item.ID" data-propertyname="Customer">@item.Customer</div></text>),
grid.Column(header: "Repeat", format:@<text><div class="edit" data-id="@item.ID" data-propertyname="Repeat">@item.Repeat</div></text>),
grid.Column(header: "ChoosePage", format:@<text><div class="edit" data-id="@item.ID" data-propertyname="ChoosePage">@item.ChoosePage</div></text>),
grid.Column(header: "AddGraphics", format:@<text><div class="edit" data-id="@item.ID" data-propertyname="AddGraphics">@item.AddGraphics</div></text>),
grid.Column(header: "Delux", format:@<text><div class="edit" data-id="@item.ID" data-propertyname="Delux">@item.Delux</div></text>),
grid.Column(header: "CustomSpecification", format:@<text><div class="edit" data-id="@item.ID" data-propertyname="CustomSpecification">@item.CustomSpecification</div></text>),
grid.Column(header: "Discount", format:@<text><div class="edit" data-id="@item.ID" data-propertyname="Discount">@item.Discount</div></text>),
grid.Column(header: "Total", format:@<text><div class="edit" data-id="@item.ID" data-propertyname="Total">@item.Total</div></text>),
grid.Column(header: "AdStatus", format:@<text><div class="edit" data-id="@item.ID" data-propertyname="AdStatus">@item.AdStatus</div></text>),
grid.Column(header: "Action", format: @<a class="btn btn-primary" href="@Url.Action("Action","Ads",new {ID = item.ID })">EDIT</a>),
grid.Column(header: "", format: @<a class="btn btn-warning" href="@Url.Action("Delete","Ads",new {ID = item.ID })">DELETE</a>)
)
)




                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .w100{
        width:100px;
    }
    .margin10{
        margin-left:10px;
    }
</style>


<script>
    $(document).ready(function () {
        var oldValue = '';
        $('.edit').editable('@Url.Action("NewAction","Ads")', {
            cssclass: 'jeditForm',
            tooltip: 'click to edit me...',
            width: 'none',
            height: 'none',
            onsubmit: function (settings, original) {
                oldValue = original.revert;
            },
            submitdata: function () {
                return {
                    id: $(this).data('id'),
                    PropertyName: $(this).data('propertyname')
                }
            },
            callback: function (value, settings) {
                var jsonData = $.parseJSON(value);
                if (jsonData.status) {
                    $(this).text(jsonData.value);
                }
                else {
                    $(this).text(oldValue);
                }
            }
        })


        @*$.ajax({
                url: '@Url.Content("~/Ads/Customers")',
                success: function (data) {

                }
            });*@


        $('.editSelect').editable('@Url.Action("NewAction","Ads")', {
            cssclass: 'jeditForm',
            tooltip: 'click to edit me...',
            width: 'none',
            height: 'none',
            type: 'select',
            submit: 'Ok',
            data: {
                'Full Page': 'Full Page',
                '3/4 Page': '3/4 Page',
                '1/2 Page Vertical': '1/2 Page Vertical',
                '1/2 Page': '1/2 Page',
                '1/3 Page': '1/3 Page',
                '1/4 Page': '1/4 Page',
                '1/4 Page Vertical': '1/4 Page Vertical',
                '1/8 Page': '1/8 Page',
                'Full Spread': 'Full Spread',
                '3/4 Spread': '3/4 Spread',
                'Full Page W’ Bleed': 'Full Page W’ Bleed'
            },

            onsubmit: function (settings, original) {
                oldValue = original.revert;
            },
            submitdata: function () {
                return {
                    id: $(this).data('id'),
                    PropertyName: $(this).data('propertyname')
                }
            },
            callback: function (value, settings) {
                var jsonData = $.parseJSON(value);
                if (jsonData.status) {
                    $(this).text(jsonData.value);
                }
                else {
                    $(this).text(oldValue);
                }
            }
        })
        $('.editSelect').click(function () {
            $('select', this).addClass('form-control pull-left w200');
            $('button', this).addClass('btn btn-sm btn-success margin10');
        });
  

        $('.editCustomerSelect').click(function () {
            $('select', this).addClass('form-control pull-left w500');
            $('button', this).addClass('btn btn-sm btn-success margin10');

        });



   
        $('.editCustomerSelect').editable('@Url.Action("NewAction","Ads")', {

            cssclass: 'jeditForm',
            tooltip: 'click to edit me...',
            width: 'none',
            height: 'none',
            type: 'select',
            submit: 'Ok',
            loadurl: '/Ads/GetCustomers',
                
            
            onsubmit: function (settings, original) {
                oldValue = original.revert;
            },
            submitdata: function () {
                return {
                    id: $(this).data('id'),
                    PropertyName: $(this).data('propertyname')
                };
            },
            callback: function (value, settings) {
                var jsonData = $.parseJSON(value);
                if (jsonData.status) {
                    $(this).text(jsonData.value);
                }
                else {
                    $(this).text(oldValue);
                }
            },
            

        });
    });

          
          
       





</script>

